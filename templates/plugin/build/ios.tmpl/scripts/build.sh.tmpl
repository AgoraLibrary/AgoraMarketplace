#!/bin/bash

set -ex

shell_path=$(
  cd "$(dirname "$0")" || exit
  pwd
)
root_path="$shell_path/../../.."

build() {
  cd "$root_path" || exit
  mkdir -p ./build/ios/"$1"
  cd ./build/ios/"$1" || exit
  if [ "$1" = "OS64COMBINED" ]; then
    archs="armv7 arm64"
  elif [ "$1" = "SIMULATOR64" ]; then
    #archs="arm64 x86_64"
    archs="x86_64"
  fi
  cmake \
    -G "Xcode" \
    -DCMAKE_TOOLCHAIN_FILE="$root_path"/build/cmake/ios.toolchain.cmake \
    -DPLATFORM="$1" \
    -DARCHS="$archs" \
    -DDEPLOYMENT_TARGET="9.0" \
    -DCMAKE_BUILD_TYPE="$2" \
    "$root_path"
  cmake --build . --config "$2"
  unset archs
}

if [ "$1" = "build" ]; then
  build "$2" "$3"
else
  echo "start build Release ----------"
  build OS64COMBINED Release
  build SIMULATOR64 Release
  rm -rf "$root_path/build/ios/ALL_ARCHITECTURE/output/Release"
  mkdir -p "$root_path/build/ios/ALL_ARCHITECTURE/output/Release"
  xcodebuild -create-xcframework \
    -framework "$root_path/build/ios/OS64COMBINED/output/Release/{{projectName}}.framework" \
    -debug-symbols "$root_path/build/ios/OS64COMBINED/output/Release/{{projectName}}.framework.dSYM" \
    -framework "$root_path/build/ios/SIMULATOR64/output/Release/{{projectName}}.framework" \
    -debug-symbols "$root_path/build/ios/SIMULATOR64/output/Release/{{projectName}}.framework.dSYM" \
    -output "$root_path/build/ios/ALL_ARCHITECTURE/output/Release/{{projectName}}.xcframework"
fi
