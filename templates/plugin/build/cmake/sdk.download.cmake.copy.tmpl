macro(download_sdk sdk_version sdk_type sdk_download_dir)
    if (CMAKE_SYSTEM_NAME STREQUAL "Darwin")
        set(platform "Mac")
    else ()
        set(platform ${CMAKE_SYSTEM_NAME})
    endif ()
    # Specify the binary distribution type and download directory.
    string(TOUPPER ${sdk_type} sdk_type_UPPER)

    set(SDK_DISTRIBUTION "Agora_Native_SDK_for_${platform}_v${sdk_version}_${sdk_type}")
    message(STATUS "SDK_DISTRIBUTION ${SDK_DISTRIBUTION}")

    # The location where we expect the extracted binary distribution.
    set(SDK_ROOT "${sdk_download_dir}/Agora_Native_SDK_for_${platform}_${sdk_type_UPPER}")

    # Download and/or extract the binary distribution if necessary.
    if (NOT IS_DIRECTORY "${SDK_ROOT}")
        set(SDK_DOWNLOAD_FILENAME "${SDK_DISTRIBUTION}.zip")
        set(SDK_DOWNLOAD_PATH "${sdk_download_dir}/${SDK_DOWNLOAD_FILENAME}")
        if (NOT EXISTS "${SDK_DOWNLOAD_PATH}")
            set(SDK_DOWNLOAD_URL "https://download.agora.io/sdk/release/${SDK_DOWNLOAD_FILENAME}")
            string(REPLACE "+" "%2B" SDK_DOWNLOAD_URL_ESCAPED ${SDK_DOWNLOAD_URL})

            # Download the binary distribution and verify the hash.
            message(STATUS "Downloading ${SDK_DOWNLOAD_PATH}...")
            file(
                    DOWNLOAD "${SDK_DOWNLOAD_URL_ESCAPED}" "${SDK_DOWNLOAD_PATH}"
                    SHOW_PROGRESS
            )
        endif ()

        # Extract the binary distribution.
        message(STATUS "Extracting ${SDK_DOWNLOAD_PATH}...")
        execute_process(
                COMMAND ${CMAKE_COMMAND} -E tar xzf "${sdk_download_dir}/${SDK_DOWNLOAD_FILENAME}"
                WORKING_DIRECTORY ${sdk_download_dir}
        )
    endif ()
endmacro()