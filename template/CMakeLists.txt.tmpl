cmake_minimum_required(VERSION 3.10)
# Your project name
project({{projectName}})

# Support C++ version
set(CMAKE_CXX_STANDARD 14)

include(build/cmake/internal_utils.cmake)
config_compiler_and_linker()

# Download and extract the SDK binary distribution (executes sdk.download.cmake).
include(build/cmake/sdk.download.cmake)
# Set the path which the downloaded SDK saved
set(SDK_DOWNLOAD_DIR "${CMAKE_SOURCE_DIR}/third_party/agora/libs")
# Download SDK by version and type (Such as v4.0.0.preview.6_full)
download_sdk("4.0.0.preview.6" "full" ${SDK_DOWNLOAD_DIR}) # SDK_ROOT
message(STATUS "SDK_ROOT " ${SDK_ROOT})
config_libs_dir(${SDK_ROOT}) # LIBS_DIR
message(STATUS "LIBS_DIR " ${LIBS_DIR})

## Start setting the dynamic library

# Set version of your extension
set(SDK_VERSION "1.0.0")
# Set output path
set(OUTPUT_DIR "${CMAKE_BINARY_DIR}/output")
set(OUTPUT_NAME "{{extensionName}}")

# All of the .h file in src folder
file(GLOB HEADER "src/*.h")
# All of the .cpp file in src folder
file(GLOB SOURCE "src/*.cpp")

add_library(${CMAKE_PROJECT_NAME}
        SHARED # Set as dynamic library
        ${HEADER}
        ${SOURCE}
        )
set_target_properties(${CMAKE_PROJECT_NAME} PROPERTIES
        VERSION "${SDK_VERSION}"
        SOVERSION "${SDK_VERSION}"
        ARCHIVE_OUTPUT_DIRECTORY "${OUTPUT_DIR}"
        LIBRARY_OUTPUT_DIRECTORY "${OUTPUT_DIR}"
        RUNTIME_OUTPUT_DIRECTORY "${OUTPUT_DIR}"
        PDB_OUTPUT_DIRECTORY "${OUTPUT_DIR}"
        OUTPUT_NAME "${OUTPUT_NAME}"
        )
include_directories(${INCLUDE_DIR})

if (APPLE)
    set_target_properties(${CMAKE_PROJECT_NAME} PROPERTIES
            FRAMEWORK TRUE
            FRAMEWORK_VERSION A
            MACOSX_FRAMEWORK_IDENTIFIER io.agora.rte.extension
            MACOSX_FRAMEWORK_SHORT_VERSION_STRING "${SDK_VERSION}"
            MACOSX_FRAMEWORK_BUNDLE_VERSION "${SDK_VERSION}"
            CXX_VISIBILITY_PRESET hidden
            LINK_FLAGS "-Wl -F ${LIBS_DIR}"
            )
    target_link_libraries(${CMAKE_PROJECT_NAME} PRIVATE
            -framework AgoraRtcKit
            )
elseif (CMAKE_SYSTEM_NAME STREQUAL "Android")
    link_directories(${LIBS_DIR})
    target_link_libraries(${CMAKE_PROJECT_NAME} PRIVATE
            ${agora-rtc-sdk-jni}
            )
endif ()
